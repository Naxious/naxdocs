"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[284],{5258:n=>{n.exports=JSON.parse('{"functions":[],"properties":[],"types":[],"name":"SpringerSignal","desc":"SpringerSignals are a way to create a connection between two parts of your code. They are similar to events, but with a few key differences. Signals are not tied to any specific event, and can be fired at any time. They can also be waited on, which allows you to pause the execution of your code until the signal is fired.\\n\\n```lua\\nlocal Signal = require(path.to.Signal)\\nlocal signal = Signal.new()\\n\\nlocal connection = signal:Connect(function(...)\\n\\tprint(\\"Signal fired with arguments:\\", ...)\\nend)\\n\\nsignal:Fire(\\"Hello, world!\\")\\nconnection:Disconnect()\\n```\\n\\nSpringerSignals are useful for creating a decoupled system, where different parts of your code can communicate without needing to know about each other. They are also useful for creating a system where you can pause the execution of your code until a certain condition is met.\\n\\n```lua\\nlocal Signal = require(path.to.Signal)\\nlocal signal = Signal.new()\\n\\nlocal function waitForSignal()\\n\\treturn signal:Wait()\\nend\\n\\ntask.spawn(function()\\n\\twaitForSignal()\\n\\tprint(\\"Signal received!\\")\\nend)\\n\\ntask.delay(1)\\nsignal:Fire()\\n```","realm":["Client","Server"],"source":{"line":79,"path":"libraries/springer/Source/SpringerSignal.lua"}}')}}]);