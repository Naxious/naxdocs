"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[536],{7434:e=>{e.exports=JSON.parse('{"functions":[{"name":"SetTarget","desc":"Springer:SetTarget(newTarget: number | Vector2 | Vector3, frequency: number?, damping: number?): Springer\\n\\n\\tSets the target value of the spring. The spring will start animating towards the target value.\\n\\tYou can also set the frequency and damping of the spring.\\n\\tIf the frequency and damping are not provided, the spring will use the default values of 1.\\n\\n\\tHere is an example of how to use the SetTarget method to bounce between two values every 3 seconds:\\n\\t```lua\\n\\tlocal springer = Springer.new(0, 1, 1)\\n\\tlocal switch = true\\n\\twhile true do\\n\\t\\ttask.wait(3)\\n\\t\\tif switch then\\n\\t\\t\\tspringer:SetTarget(1, 1, 1)\\n\\t\\telse\\n\\t\\t\\tspringer:SetTarget(0, 1, 1)\\n\\t\\tend\\n\\t\\tswitch = not switch\\n\\tend\\n\\t```\\n\\n\\t@param newTarget number | Vector2 | Vector3 -- The target value of the spring.\\n\\t@param frequency number? -- The frequency of the spring.\\n\\t@param damping number? -- The damping of the spring.\\n\\n\\t@return Springer -- The Springer instance.","params":[{"name":"self","desc":"","lua_type":"Springer"},{"name":"newTarget","desc":"","lua_type":"number | Vector2 | Vector3"},{"name":"frequency","desc":"","lua_type":"number?"},{"name":"damping","desc":"","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"Springer\\n"}],"function_type":"static","source":{"line":159,"path":"libraries/springer/Source/init.lua"}},{"name":"new","desc":"constructs a new Springer instance.\\n\\n:::note\\n\\tThe .new method is a constructor and should be called with a colon from the Springer ModuleScript.\\n\\tSpringer instances themselves, will not contain the .new method.\\n:::","params":[{"name":"initialValue","desc":"","lua_type":"number | Vector2 | Vector3"},{"name":"frequency","desc":"","lua_type":"number?"},{"name":"damping","desc":"","lua_type":"number?"},{"name":"initialGoal","desc":"","lua_type":"(number | Vector2 | Vector3)?"}],"returns":[{"desc":"The Springer instance.","lua_type":"Springer"}],"function_type":"static","source":{"line":209,"path":"libraries/springer/Source/init.lua"}}],"properties":[],"types":[],"name":"Springer","desc":"Springer is a class that allows you to animate values using a spring physics model.\\nThe values you can animate are numbers, Vector2, and Vector3.\\nYou can set the target value, frequency, and damping to customize the spring.\\nYou can also listen to the `onStep` SpringerSignal to get the current value of the spring.\\nWhen the spring reaches the target value, the `onComplete` SpringerSignal will be fired.\\n\\nHere is an example of how to use the Springer class to animate a number from 0 to 1 in 1 second:\\n```lua\\nlocal springer = Springer.new(0, 1, 1)\\nspringer:SetTarget(1, 1, 1)\\nspringer.onStep:Connect(function(value)\\n\\tprint(value)\\nend)\\nspringer.onComplete:Connect(function()\\n\\tprint(\\"Springer completed\\")\\nend)\\n```","source":{"line":46,"path":"libraries/springer/Source/init.lua"}}')}}]);